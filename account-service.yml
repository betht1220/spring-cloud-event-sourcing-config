spring:
  profiles:
    active: development
---
spring:
  profiles: development
# DATABASE
# run mysql in docker container
#      cd /Users/dragon/labs/apps/es
#      docker-compose up mysql
#      docker ps
#      mysql -uroot -h 127.0.0.1 -p  dbpass
#      mysql> create database dev;
# check connection, db, root/dbpass with visualizer
# pic = /shopping-cart-service2/BethDocs/visualizer.chk.docker-mysql-dev-db.png
#
# pom.xml
#    <!-- ORMapping -->
#    <dependency>
#      <groupId>org.springframework.boot</groupId>
#      <artifactId>spring-boot-starter-data-jpa</artifactId>
#    </dependency>
#    <!-- exposing data -->
#    <dependency>
#      <groupId>org.springframework.boot</groupId>
#      <artifactId>spring-boot-starter-data-rest</artifactId>
#    </dependency>
#    <!-- mysql connector -->
#    <dependency>
#      <groupId>mysql</groupId>
#      <artifactId>mysql-connector-java</artifactId>
#      <scope>runtime</scope>
#    </dependency>
# SpringBoot: beans
#@SpringBootApplication
#public class ShoppingCartService2Application {
#
#  public static void main(String[] args) {
#        ConfigurableApplicationContext ctx = SpringApplication.run(ShoppingCartService2Application.class, args);
#        System.out.println(">>> Datasource instance: " + ctx.getBean("dataSource"));
#        System.out.println(">>> TransactionManager instance: " + ctx.getBean("transactionManager"));    
#  }
#}
#
# Common spring boot properties = https://docs.spring.io/spring-boot/docs/current/reference/html/common-application-properties.html
  datasource:
    url: jdbc:mysql://127.0.0.1:3306/dev
    username: root
    password: dbpass
    platform: mysql
    initialization-mode: always # + schema.sql = will create the table
  jpa:
    hibernate:
      ddl-auto: create # create-drop is default from url of common spring boot properties
eureka:
  instance:
    prefer-ip-address: true
  client:
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: http://localhost:8761/eureka/
---
spring:
  profiles: docker
  datasource:
    url: jdbc:mysql://mysql:3306/dev
    username: root
    password: dbpass
    initialize: true
security:
  oauth2:
    resource:
      userInfoUri: http://${DOCKER_IP:192.168.99.100}:8181/uaa/user
    client:
      client-id: acme
eureka:
  instance:
    prefer-ip-address: true
  client:
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: http://discovery-service:8761/eureka/
---
spring:
  application:
    name: account-service
  profiles: test
  jpa:
    show_sql: false
    database: H2
  datasource:
    url: jdbc:h2:mem:testdb;DB_CLOSE_ON_EXIT=FALSE
    initialize: false
security:
  oauth2:
    resource:
      userInfoUri: http://localhost:8181/uaa/user
    client:
      client-id: acme
      access-token-uri: http://localhost:8787
